#!/Melify/bin/mac/tclkit

lappend auto_path /Melify/mtk/dev/tk/src/utl
lappend auto_path /Melify/mtk/dev/tk/lib/components/w/mtk

dependencies

# CHECK ARGUMENTS
if {$argc == 0} {
    puts ""
    puts "USAGE: packer component-1 component-2 ... component-n"
    puts "\tAVAILABLE COMPONENTS: "
    set cnt 0
    foreach i [lsort [array names dep]] {
	puts "\t[incr cnt]: $i"
    }
    puts ""
    puts "\texample: packer maker countdown ..."
    puts ""
    exit
}

# SET PATHS
set react   "/Melify/mtk/dev/tk/lib/components/misc/react"
set angular "/Melify/mtk/dev/tk/lib/components/misc/angular"
set webpack "/Melify/mtk/dev/tk/lib/components/misc/webpack"
set comps   "$argv"

######################################################
##### CREATE INDEX.JS FILE
######################################################
puts ""
puts "> Creating index.js file..."

set str ""
foreach i $comps {
    set i [string trim $i]

    if {[info exist dep($i)] == 1} {
        append str [string trim $dep($i)]
    } else {
	puts "ERROR: DON'T HAVE $i component yet!"
	exit
    }
}

set f [open $webpack/src/.index.js r]
set r [read $f];
close $f
regsub -all "<BUNDLED>" $r $str r

set f [open $webpack/src/index.js w]
puts $f $r;
close $f

######################################################
##### CREATE INDEX.HTML FILE
######################################################
puts "> Creating index.html file..."

set html ""
foreach i $comps {
    set i [string trim $i]
    set f [open $webpack/src/w/html/${i}.html r]
    
    while {[gets $f line] >= 0} {
        if {[string first "<!-- SAMPLE -->" $line] != -1} {
            break
        }
    }
    
    while {[gets $f line] >= 0} {
        if {[string first "<!-- SAMPLE -->" $line] == -1} {
	    if {[string first "<!--" $line] == -1} {
		append html "$line\n"
	    }
        } else {
            break
        }
    }
    
    append html "<hr/>\n"
}

# 1; WEBPACK
################################################
set f [open $webpack/src/.index.html r]
set r [read $f]
close $f

regsub "<HTMLCODE/>" $r "$html" r

set f [open $webpack/src/index.html w]
puts $f $r
close $f

# 1: REACT
################################################
set f [open $react/src/.App.js r]
set r [read $f]
close $f

regsub -all "<!--" $html "// <!--" html

regsub "<HTMLCODE/>" $r "$html" r

set f [open $react/src/App.js w]
puts $f $r
close $f

# 1: ANGULAR
################################################
set f [open $angular/app/view1/.view1.html r]
set r [read $f]
close $f

regsub -all "<!--" $html "// <!--" html

regsub "<HTMLCODE/>" $r "$html" r

set f [open $angular/app/view1/view1.html w]
puts $f $r
close $f

######################################################
##### CREATE INDEX.HTML FILE
######################################################
puts "> Creating bundle file..."

cd $webpack
file delete -force $webpack/build
exec /usr/local/bin/node /usr/local/bin/npm run build &

while {1} {
    if {[file exist $webpack/build/bundle.js] == 0} {
        delay::delay-bw 2000
    } else {
        catch {exec /usr/bin/killall npm}
        puts "DONE WITH GO..."
        eval exec open file:///Melify/mtk/dev/tk/lib/components/misc/webpack/build/index.html
        eval exec say "Have no fear, Mel is here"

	# ADD STUFF TO bundle.js
	file:write /tmp/_z1 {
	    /* eslint-disable-next-line */
	    /* eslint-disable */
	    if (typeof wcENV === 'undefined') {wcENV = 'dev'}
	    if (typeof wcAPP === 'undefined') {wcAPP = 'NOT-SET'}
	    if (typeof wcURL === 'undefined') {wcURL = 'NOT-SET'}
	}
	
	file copy /Melify/mtk/dev/tk/lib/components/misc/webpack/build/bundle.js /tmp/_z2
	exec cat /tmp/_z1 /tmp/_z2 > /Melify/mtk/dev/tk/lib/components/misc/webpack/build/bundle.js
	file delete -force /tmp/_z1 /tmp/_z2

        exit
    }
}

vwait 1
